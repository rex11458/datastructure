//
//  graph.h
//  数据结构
//
//  Created by LiuRex on 2017/8/7.
//  Copyright © 2017年 LiuRex. All rights reserved.
//

/*
 *  5.1.1)图的定义
        图是由一个非空的顶点集合和一个描述顶点之间关系----边(或者弧)的集合组成。
    5.1.2)图额基本术语
        1.无向图
            对于一个图G，若边集E(G)为无向边的集合，则称该图为无向图。
        2.无向图
            对于一个图G，若边集E(G)为有向边的集合，则称该图为无向图。
        3.端点和邻接点
            在一个无向图中，若存在一条边(Vi,Vj),则称Vi、Vj为该边的两个端点。并称它们互为邻接点。
        4.起点和终点
            在一个有向图中，若存在一条边<Vi,Vj>,则称该边是顶点Vi的一条出边，顶点Vj的一条入边；称Vi为起始端点(或起点)，Vj为终止端点(或终点);
          称Vi和Vj互为邻接点，并称Vj是Vi的出边邻接点，Vi是Vj的入边邻接点。
        5.度、入度和出度
            图中每个顶点的度定义为以该顶点为一个端点的边的数目，记为D(v)。对于有向图，顶点v的度分为入度和出度，入度是以该顶点为终点的入边数目，出度是以该顶点为起点的出边数目，该顶点的度等于其入度与出度之和。
        6.子图
         设有两个图G=（V,E）和G‘=(V',E'),若V‘是V的子集，且E’是E的子集。则G‘是G的子图。
        7.无向完全图
         设n为顶点树，则具有n(n-1)/2条边的无向图称为无向完全图。
        8.无向完全图
          设n为顶点树，则具有n(n-1)条边的无向图称为无向完全图。
        9.稀疏图
          边很少(如e<n*log2n,其中n为顶点数)的图称为稀疏图。
        10.稠密图
          边很多的图称为稠密图。
        11.路径和路径长度
          路径长度是指一条路径上经过的边的数目。
        12.简单路径
          若一条路径上除开始点和结束点可以为同一顶点外，其余顶点均不相同，则称为该路径为简单路径。
        13.回路或环
        若一条路径上的开始点和结束点为同一顶点，则称该路径为回路或环。
        14.连通、连通图和连通分量
            在无向图G中，若从顶点Vi到顶点Vj有路径，则称为Vi和Vj是连通的。若图G中任意两个顶点都连通，则称G为连通图，否则为非连通图。
        无向图G中极大连通子图称为G的连通分量。
        15.强连通图和强连通分量
         在有向图G中，若任意两个顶点Vi和Vj都连通，即从Vi到Vj和从Vj到Vi都存在路径，则称该图是强连通图。有向图G中极大强连通子图称为G的强连通分量。
        16.权和网
        在一个图中，每条边可以标上具有某种含义的数值，则该数值为该边的权。边上带权的图称为带权图，也称为网。
    5.2）图的存储结构
        1.邻接矩阵
        2.邻接表
 */

#ifndef graph_h
#define graph_h

#include <stdio.h>

typedef char VertexType;

static int const MAX_VEX = 100;

struct vertex{
    int num;/*顶点编号*/
    VertexType data;/*顶点的信息*/
};

typedef struct {
    struct vertex vexs[MAX_VEX]; /*顶点集合*/
    int edges[MAX_VEX][MAX_VEX]; /*边的集合*/
}graph;

graph creatgraph(int *n);



#endif /* graph_h */
