//
//  sort.h
//  数据结构
//
//  Created by LiuRex on 2017/8/8.
//  Copyright © 2017年 LiuRex. All rights reserved.
//
/*
 *  7.1）插入排序
    1.直接插入排序：
            每一趟将一个待排序的记录按其关键字值的大小插入到已经排序的部分文件中的适当位置，
    直到全部插入完成。
    2.希尔排序
        希尔排序又称为缩小增量排序方法，其基本思想是：将记录按下标增量d分组，对每组记录使用插入排序
    方法进行排序，随着增量逐渐减小，所分成的组包含的记录越来越多。到增量的值减小到1时，整个数组、
    合成为一组，构成一组有序记录，则完成排序。
 
    7.2)选择排序
    每步从待排序的记录中选出关键字最小的记录，顺序放在已经排序的记录序列的最后，直到全部排完为止。
    7.3)交换排序
    1.冒泡排序
    通过无序区中相邻记录关键字间的比较和位置交换，使关键字最小的记录如气泡一般逐渐往上“漂浮”直至“水面”。
    2.快速排序
    由冒泡排序改进而得。在待排序的n个记录中任取一个记录(通常取第一个记录),把该记录放入最终位置，数据序列被此记录份额成两部分。
    所有关键字比该记录关键字笑的放置在前面一部分，比该记录大的放置在后一部分。并把该记录排在这两部分的中间，这个过程称作一趟快速排序。
    之后对所有的两个部分分别重复上述过程，直至每部分内只有一个记录为止。
    7.4)归并排序
    归并排序就是将两个或两个以上的有序数据序列合并成一个有序数据序列的过程。
 */

















#ifndef sort_h
#define sort_h
#include <stdio.h>

/*插入排序*/
void insertsort(int r[],int n);

/*希尔排序*/
void shellsort(int r[],int n);

/*选择排序*/
void selectsort(int r[],int n);

/*冒泡排序*/
void bubblesort(int r[],int n);

/*快速排序*/
void fastsort(int r[],int start,int end);

void combinesort(int r[],int r1[],int n);
#endif /* sort_h */









